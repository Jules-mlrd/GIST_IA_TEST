generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model notes_travaux {
  id            Int       @id @default(autoincrement())
  note          String?
  affaire_id    Int?
  libelle       String?
  date_creation DateTime? @db.Date
  etat          String?
  affaires      affaires? @relation(fields: [affaire_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model affaires {
  id                       Int             @id @default(autoincrement())
  numero_affaire           String?
  titre                    String?
  etat                     String?
  referent                 String?
  porteur                  String?
  type_demande             String?
  portefeuille_projet      String?
  priorite                 String?
  date_demande_client      DateTime?       @db.Date
  date_rea_souhaitee       DateTime?       @db.Date
  compte_projet            String?
  reference_client         String?
  s3_folder                String?
  client                   String?
  guichet                  String?
  contact_moa_moeg         String?
  communication_client     String?
  code_c6                  String?
  fem_esti                 String?
  sa                       String?
  type_mission             String?
  type_decret              String?
  contact_site             String?
  risque_environnemental   String?
  mesure_env               String?
  commentaires_env         String?
  site                     String?
  description_technique    String?
  date_diffusion           DateTime?       @db.Date
  cree_par                 String?
  type_note                String?
  programme                String?
  date_engagement_fdt_esti DateTime?       @db.Date
  date_indication_fdt      DateTime?       @db.Timestamp(6)
  devis_associe            String?
  modification             String?
  rg_moa                   String?
  dod                      String?
  chef_de_projet           String?
  pilote_travaux           String?
  delegation_prm_det       String?
  csps                     String?
  types_de_comptes         String?
  budget                   budget[]
  demande                  demande[]
  devis                    devis[]
  notes_travaux            notes_travaux[]
}

model demande {
  id             Int       @id @default(autoincrement())
  numero_demande String?
  demandeur      String?
  etat           String?
  compte_projet  String?
  titre          String?
  date_demande   DateTime? @db.Date
  statut         String?
  affaire_id     Int?
  affaires       affaires? @relation(fields: [affaire_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  devis          devis[]
}

model devis {
  id                  Int       @id @default(autoincrement())
  numero_devis        String?
  affaire_id          Int?
  demande_id          Int?
  objet               String?
  table_etablissement String?
  etat                String?
  affaires            affaires? @relation(fields: [affaire_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  demande             demande?  @relation(fields: [demande_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model budget {
  id             Int       @id @default(autoincrement())
  cle_pc         String?
  operation      String?
  lot            String?
  n_commande     String?
  pl             String?
  chef_de_file   String?
  rg             String?
  client         String?
  libelle_pl     String?
  esti           String?
  type_de_compte String?
  affaire_id     Int?
  affaires       affaires? @relation(fields: [affaire_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
